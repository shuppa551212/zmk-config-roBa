#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&sl { release-after-ms = <250>; };

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        LR_PAR: LR_PAR {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp INT5 &kp LS(N8) &kp LS(N9) &kp LEFT>;
            label = "LR_PAR";
        };

        LR_BRC: LR_BRC {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp INTERNATIONAL_5 &kp LS(RBKT) &kp LS(NUHS) &kp LEFT>;
            label = "LR_BRC";
        };

        LR_BKT: LR_BKT {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp INTERNATIONAL_5 &kp RBKT &kp NUHS &kp LEFT>;
            label = "LR_BKT";
        };

        LR_KAKKO: LR_KAKKO {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp INTERNATIONAL_4 &kp RBKT &kp NUHS &kp ENTER &kp LEFT>;
            label = "LR_KAKKO";
        };

        LR_SQT: LR_SQT {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp INTERNATIONAL_5 &kp LS(N7) &kp LS(N7) &kp LEFT>;
            label = "LR_SQT";
        };

        LR_DQT: LR_DQT {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp INTERNATIONAL_5 &kp LS(NUMBER_2) &kp LS(NUMBER_2) &kp LEFT>;
            label = "LR_DQT";
        };

        LR_ASTRK: LR_ASTRK {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp INTERNATIONAL_5 &kp LS(SQT) &kp LS(SQT) &kp LEFT_ARROW>;
            label = "LR_ASTRK";
        };

        SX_ST_DEF: SX_ST_DEF {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp INTERNATIONAL_5 &kp SQT &kp LS(MINUS) &kp SPACE &kp SPACE &kp SEMI &kp LEFT &kp LEFT>;
            label = "SX_ST_DEF";
        };

        mkp_exit_AML: mkp_exit_AML {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&sl MOUSE>;

            label = "MKP_EXIT_AML";
        };

        exit_AML: exit_AML {
            compatible = "zmk,behavior-macro";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <0>;
            bindings = <&tog_off MOUSE>;
            label = "exit_AML";
        };

        kp_exit_AML: kp_exit_AML {
            compatible = "zmk,behavior-macro-one-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <1>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER &exit_AML>;
            label = "KP_exit_AML";
        };

        mod_exit_AML: mod_exit_AML {
            compatible = "zmk,behavior-macro-one-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&exit_AML>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>;

            label = "MOD_exit_AML";
        };

        mo_exit_AML: mo_exit_AML {
            compatible = "zmk,behavior-macro-one-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &mo MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&exit_AML>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &mo MACRO_PLACEHOLDER>,
                <&macro_tap>;

            label = "MO_exit_AML";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        tog_off: toggle_layer_off {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer Off";
            toggle-mode = "off";
        };

        lt_exit_AML: lt_exit_AML {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_exit_AML";
            bindings = <&mo_exit_AML>, <&kp_exit_AML>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "balanced";
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q      &kp W           &kp E         &kp R                  &kp T                                                                    &kp Y      &kp U  &kp I      &kp O    &kp P
&kp A      &kp S           &kp D         &kp F                  &kp G                 &kp LG(TAB)                         &kp HOME       &kp H      &kp J  &kp K      &kp L    &kp MINUS
&kp Z      &kp X           &kp C         &kp V                  &kp B                 &kp LC(HOME)                        &kp END        &kp N      &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LCTRL  &kp LEFT_SHIFT  &kp LEFT_ALT  &lt_to_layer_0 4 INT5  &lt_exit_AML 5 SPACE  &lt_exit_AML 2 INTERNATIONAL_4      &kp BACKSPACE  &kp ENTER                             &lt 6 ESCAPE
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        FUNCTION {
            bindings = <
&none  &none  &none  &none   &none                       &none   &none  &none  &none  &none
&none  &none  &none  &none   &none   &none       &none   &none   &none  &none  &none  &none
&none  &none  &none  &none   &none   &none       &none   &none   &none  &none  &none  &none
&none  &none  &none  &trans  &trans  &trans      &trans  &trans                       &none
            >;
        };

        NUM {
            bindings = <
&none   &none   &none   &none   &none                           &kp LS(COMMA)  &kp N7        &kp N8        &kp N9        &kp LS(DOT)
&none   &none   &none   &none   &none   &none       &none       &kp LS(SEMI)   &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp MINUS
&none   &none   &none   &none   &none   &none       &none       &kp LS(SQT)    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp SLASH
&trans  &trans  &trans  &trans  &trans  &trans      &kp PERIOD  &kp NUMBER_0                                             &kp EQUAL
            >;
        };

        ARROW {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&none      &kp_exit_AML F7  &kp_exit_AML F8  &kp_exit_AML F9  &kp_exit_AML F10                                 &none   &none              &mkp_exit_AML MB3  &none              &none
&none      &kp_exit_AML F4  &kp_exit_AML F5  &kp_exit_AML F6  &kp_exit_AML F11  &none       &kp_exit_AML HOME  &none   &mkp_exit_AML MB1  &kp UP             &mkp_exit_AML MB2  &none
&none      &kp_exit_AML F1  &kp_exit_AML F2  &kp_exit_AML F3  &kp_exit_AML F12  &none       &kp_exit_AML END   &none   &kp LEFT           &kp DOWN           &kp RIGHT          &none
&kp LCTRL  &kp LEFT_SHIFT   &none            &trans           &trans            &trans      &trans             &trans                                                           &kp_exit_AML ESCAPE
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SCROLL {
            bindings = <
&none      &none             &none        &SX_ST_DEF               &LR_SQT                             &LR_ASTRK      &LR_PAR           &LR_BRC     &LR_BKT           &LR_KAKKO
&kp LC(C)  &kp LC(V)         &kp LC(X)    &kp LS(INTERNATIONAL_1)  &kp LS(MINUS)  &none       &none    &kp SEMI       &kp LS(NUMBER_4)  &kp LS(N5)  &kp LS(NUMBER_6)  &kp SQT
&kp LC(Z)  &kp LC(A)         &kp LG(TAB)  &kp LS(SLASH)            &kp LBKT       &none       &none    &kp LS(EQUAL)  &kp LS(NUMBER_1)  &LR_DQT     &kp LS(NUMBER_3)  &kp INTERNATIONAL_3
&trans     &kp LS(CAPSLOCK)  &none        &trans                   &trans         &trans      &kp DEL  &kp LA(ENTER)                                                  &kp LS(INTERNATIONAL_3)
            >;
        };

        layer_6 {
            bindings = <
&none  &none  &none  &none   &none                       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&none  &none  &none  &none   &none   &none       &none   &none         &none         &none         &none         &bt BT_CLR
&none  &none  &none  &none   &none   &none       &none   &none         &none         &none         &none         &bt BT_CLR_ALL
&none  &none  &none  &trans  &trans  &trans      &trans  &trans                                                  &mo 6
            >;
        };
    };

    ttp224tap: ttp224tap {
        compatible = "zmk,kscan-sideband-behaviors";
        kscan = <&touchkey1>;
        auto-enable;

        touch {
            column = <0>;
            row = <0>;
            bindings = <&mo 4>;
        };
    };
};
